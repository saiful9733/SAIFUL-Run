const moment = require("moment-timezone");

module.exports.config = {
  name: "time",
  version: "4.3.2",
  hasPermssion: 0,
  credits: "Mohammad Akash + Saiful Edit (Bangla Month Fix by GPT-5)",
  description: "Displays current time, accurate Bangla date, bot uptime, and important days.",
  commandCategory: "Info",
  cooldowns: 1
};

// ЁЯФ╣ ржЗржВрж░рзЗржЬрж┐ рж╕ржВржЦрзНржпрж╛ -> ржмрж╛ржВрж▓рж╛ рж╕ржВржЦрзНржпрж╛
function engToBanglaNumber(number) {
  const eng = ["0","1","2","3","4","5","6","7","8","9"];
  const ban = ["рзж","рзз","рзи","рзй","рзк","рзл","рзм","рзн","рзо","рзп"];
  return number.toString().split("").map(ch => eng.includes(ch) ? ban[eng.indexOf(ch)] : ch).join("");
}

// ЁЯФ╣ ржЧрзБрж░рзБрждрзНржмржкрзВрж░рзНржг ржжрж┐ржи
const importantDays = [
  { name: "рж╢рзБржХрзНрж░ржмрж╛рж░", check: (date) => date.day() === 5 },
  { name: "ржИржжрзБрж▓ ржлрж┐рждрж░", check: (date) => date.format("MM-DD") === "04-21" },
  { name: "ржИржжрзБрж▓ ржЖржпрж╣рж╛", check: (date) => date.format("MM-DD") === "06-28" },
  { name: "ржорж╛рж╣рзЗ рж░ржоржЬрж╛ржи рж╢рзБрж░рзБ", check: (date) => date.format("MM-DD") === "03-11" },
  { name: "ржорж╛рж╣рзЗ рж░ржоржЬрж╛ржи рж╢рзЗрж╖", check: (date) => date.format("MM-DD") === "04-10" }
];

// ЁЯФ╣ ржмрж╛ржВрж▓рж╛ ржорж╛рж╕ ржУ рж╕ржкрзНрждрж╛рж╣
const banglaMonths = ["ржмрзИрж╢рж╛ржЦ","ржЬрзНржпрзИрж╖рзНржа","ржЖрж╖рж╛ржврж╝","рж╢рзНрж░рж╛ржмржг","ржнрж╛ржжрзНрж░","ржЖрж╢рзНржмрж┐ржи","ржХрж╛рж░рзНрждрж┐ржХ","ржЕржЧрзНрж░рж╣рж╛ржпрж╝ржг","ржкрзМрж╖","ржорж╛ржШ","ржлрж╛рж▓рзНржЧрзБржи","ржЪрзИрждрзНрж░"];
const banglaWeekdays = ["рж░ржмрж┐ржмрж╛рж░","рж╕рзЛржоржмрж╛рж░","ржоржЩрзНржЧрж▓ржмрж╛рж░","ржмрзБржзржмрж╛рж░","ржмрзГрж╣рж╕рзНржкрждрж┐ржмрж╛рж░","рж╢рзБржХрзНрж░ржмрж╛рж░","рж╢ржирж┐ржмрж╛рж░"];

// ЁЯФ╣ ржмрж╛ржВрж▓рж╛ ржорж╛рж╕ рж╢рзБрж░рзБ (ржЗржВрж░рзЗржЬрж┐ ржорж╛рж╕ ржЕржирзБржпрж╛ржпрж╝рзА)
const banglaMonthStart = [
  [3,14],[4,15],[5,15],[6,16],[7,17],[8,17],
  [9,17],[10,16],[11,16],[0,15],[1,13],[2,14]
];

// ЁЯФ╣ ржмрж╛ржВрж▓рж╛ рждрж╛рж░рж┐ржЦ ржлрж╛ржВрж╢ржи (рж╕ржарж┐ржХ)
function getBanglaDate() {
  const now = moment.tz("Asia/Dhaka");
  const engYear = now.year();
  const engMonth = now.month();
  const engDate = now.date();

  // ржмрж╛ржВрж▓рж╛ ржмржЫрж░
  let banglaYear = engYear - 593;
  if (engMonth < 3 || (engMonth === 3 && engDate < 14)) banglaYear -= 1;

  // ржмрж╛ржВрж▓рж╛ ржорж╛рж╕
  let banglaMonthIndex = 11;
  for (let i = 0; i < 12; i++) {
    const [m,d] = banglaMonthStart[i];
    const [nextM,nextD] = banglaMonthStart[(i+1)%12];
    const start = moment(`${engYear}-${m+1}-${d}`, "YYYY-M-D");
    const end = moment(`${engYear}-${nextM+1}-${nextD}`, "YYYY-M-D");
    if (now.isSameOrAfter(start) && now.isBefore(end)) {
      banglaMonthIndex = i;
      break;
    }
  }

  const [startM,startD] = banglaMonthStart[banglaMonthIndex];
  const start = moment(`${engYear}-${startM+1}-${startD}`, "YYYY-M-D").tz("Asia/Dhaka");
  const banglaDay = now.diff(start, "days") + 1;

  return {
    day: banglaDay,
    month: banglaMonths[banglaMonthIndex],
    year: banglaYear,
    weekday: banglaWeekdays[now.day()]
  };
}

module.exports.run = async function({ api, event }) {
  const { threadID } = event;

  // ржЖржкржЯрж╛ржЗржо
  const uptime = process.uptime(),
        hours = Math.floor(uptime/3600),
        minutes = Math.floor((uptime%3600)/60),
        seconds = Math.floor(uptime%60);

  // ржмрж░рзНрждржорж╛ржи рж╕ржорзЯ (Dhaka)
  const now = moment.tz("Asia/Dhaka");
  const time = now.format("hh:mm A");
  const date = now.format("DD-MM-YYYY, dddd");

  // ржмрж╛ржВрж▓рж╛ рждрж╛рж░рж┐ржЦ
  const bangla = getBanglaDate();
  const banglaDate = `${engToBanglaNumber(bangla.day)} ${bangla.month}, ${engToBanglaNumber(bangla.year)} (${bangla.weekday})`;

  // ржЖржЬржХрзЗрж░ ржЧрзБрж░рзБрждрзНржмржкрзВрж░рзНржг ржжрж┐ржи
  let todayImportant = importantDays.filter(d => d.check(now)).map(d => d.name).join(", ");
  if (!todayImportant) todayImportant = "ржХрзЛржиржУ ржмрж┐рж╢рзЗрж╖ ржжрж┐ржи ржирзЗржЗ";

  // ржХрзЗржкрж╢ржи
  const caption = ` ЁЯМЯ ржЖрж▓рзНрж▓рж╛рж╣рж░ ржЖрж╢рзАрж░рзНржмрж╛ржж рж╕рж░рзНржмржжрж╛ ржЖржкржирж╛рж░ рж╕рж╛ржерзЗ ржерж╛ржХрзБржХ..! ЁЯХМ ржирж╛ржорж╛ржЬ ржирж┐рзЯржорж┐ржд ржкрзЬрзБржи..! ЁЯМЩ ржжрзЛрзЯрж╛ ржХрж░рждрзЗ ржнрзБрж▓ржмрзЗржи ржирж╛..! ЁЯдЭ ржорж╛ржирзБрж╖рзЗрж░ рж╕рж╛ржерзЗ рж╕ржжрзЯ ржерж╛ржХрзБржи..! ЁЯТл ржЬрзАржмржи ржЖрж▓рзЛржХрж┐ржд ржУ ржмрж░ржХрждржкрзВрж░рзНржг рж╣рзЛржХ..!`;

  // ржлрзБрж▓ржмржХрзНрж╕ ржорзЗрж╕рзЗржЬ
  const message = `тХФтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХЧ
ЁЯУЕ ЁЭЩ▓ЁЭЪКЁЭЪХЁЭЪОЁЭЪЧЁЭЪНЁЭЪОЁЭЪЫ ЁЯУЕ
тХЪтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХРтХЭ
ЁЯХТ рж╕ржорзЯ        : ${time}
ЁЯУЕ рждрж╛рж░рж┐ржЦ      : ${date}
ЁЯЧУя╕П ржмрж╛ржВрж▓рж╛ рждрж╛рж░рж┐ржЦ : ${banglaDate}
ЁЯЧУя╕П ржЖржЬржХрзЗрж░ ржмрж┐рж╢рзЗрж╖ ржжрж┐ржи : ${todayImportant}
тП│ ржЖржкржЯрж╛ржЗржо     : ${engToBanglaNumber(hours)} ржШржирзНржЯрж╛, ${engToBanglaNumber(minutes)} ржорж┐ржирж┐ржЯ, ${engToBanglaNumber(seconds)} рж╕рзЗржХрзЗржирзНржб

тФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБ
${caption}
тФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБ

ЁЯСС Bot Owner : ЁЯМЯ ЁЭРВЁЭРлЁЭРЮЁЭРЪЁЭРнЁЭЧ╝ЁЭРл тФБ ЁЭРТЁЭРЪЁЭРвЁЭРлЁЭРоЁЭРе ЁЭРИЁЭРмЁЭРеЁЭРЪЁЭРж ЁЯМЯ`;

  return api.sendMessage(message, threadID);
};
